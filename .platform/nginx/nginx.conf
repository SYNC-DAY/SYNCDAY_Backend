# deploy/.platform/nginx/nginx.conf
user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    types_hash_max_size 2048;
    types_hash_bucket_size 128;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    include       conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
    }

    upstream docker {
        server 127.0.0.1:5000;
        keepalive 1024;
    }

    server {
        listen        80 default_server;
        listen        [::]:80 default_server;

        location /api {
            proxy_pass          http://docker;
            proxy_http_version  1.1;
            proxy_set_header    Connection          $connection_upgrade;
            proxy_set_header    Upgrade             $http_upgrade;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        # Swagger UI 관련 공통 설정을 위한 블록
        location ~ ^/(swagger-ui|v3/api-docs|swagger-resources|swagger-custom-ui\.html|api/docs/login) {
            proxy_pass          http://docker;
            proxy_http_version  1.1;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto   $scheme;

            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' 'https://api.syncday.me' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # WebSocket 지원을 위한 설정 추가
        location /ws {
            proxy_pass          http://docker;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade             $http_upgrade;
            proxy_set_header    Connection          "upgrade";
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        location /sse {
            proxy_pass          http://docker;
            proxy_http_version  1.1;
            proxy_set_header    Connection          '';  # SSE를 위해 Connection 헤더를 비움
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

            # SSE를 위한 특별 설정
            proxy_buffering     off;  # 버퍼링을 비활성화하여 실시간 스트리밍 지원
            proxy_cache         off;  # 캐싱 비활성화

            # CORS 헤더 설정
            add_header 'Access-Control-Allow-Origin' 'https://syncday.me' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 요청에 대한 처리 추가
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://syncday.me' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Keep-alive 타임아웃 설정
            proxy_read_timeout 24h;  # SSE 연결을 24시간 동안 유지
        }

        access_log    /var/log/nginx/access.log main;
        client_header_timeout 60;
        client_body_timeout   60;
        keepalive_timeout     60;
        gzip                  off;
        gzip_comp_level       4;

        # Include the Elastic Beanstalk generated locations
        include conf.d/elasticbeanstalk/healthd.conf;
    }
}