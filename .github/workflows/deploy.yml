name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ deploytest ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Gradle Wrapper
        run: gradle wrapper

      - name: Install envsubst
        run: sudo apt-get install -y gettext

      - name: Create .ebextensions
        run: |
          mkdir -p .ebextensions
          cat > .ebextensions/01-docker-compose.config <<EOL
          files:
            "/etc/docker/config.json":
              mode: "000644"
              owner: root
              group: root
              content: |
                {
                  "mountpoints": {
                    "/var/app/current": {
                      "source": "/var/app/current",
                      "destination": "/var/app/current",
                      "type": "bind",
                      "readonly": false
                    }
                  }
                }
          EOL
          
          cat > .ebextensions/02-nginx-proxy.config <<EOL
          files:
            "/etc/nginx/conf.d/proxy.conf":
              mode: "000644"
              owner: root
              group: root
              content: |
                upstream docker {
                  server 127.0.0.1:5000;
                  keepalive 256;
                }
          
                server {
                  listen 80;
          
                  location / {
                      proxy_pass  http://docker;
                      proxy_set_header  Connection  "";
                      proxy_http_version  1.1;
                      proxy_set_header  Host  \$host;
                      proxy_set_header  X-Real-IP \$remote_addr;
                      proxy_set_header  X-Forwarded-For \$proxy_add_x_forwarded_for;
                  }
                }
          EOL

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml <<EOL
          server:
            port: 5000
          
          spring:
            application:
              name: syncday-service
          
            devtools:
              restart:
                enabled: false
              livereload:
                enabled: false
          
            mail:
              host: smtp.gmail.com
              port: 587
              username: ${MAIL_USERNAME}
              password: ${MAIL_PASSWORD}
              properties:
                mail.smtp.debug: true
                mail.smtp.connectiontimeout: 1000
                mail.starttls.enable: true
                mail.smtp.auth: true
          
            web:
              resources:
                add-mappings: false
          
            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: jdbc:mariadb://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
              username: ${RDS_USERNAME}
              password: ${RDS_PASSWORD}
          
            jpa:
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  format_sql: true
              generate-ddl: false
          
            data:
              redis:
                host: redis
                port: 6379
              mongodb:
                uri: mongodb://mongodb:27017/chatdb
          
            elasticsearch:
              uris: http://elasticsearch:9200
          
          logging:
            level:
              com:
                threeping:
                  syncday: DEBUG
          
          app:
            cors:
              allowed-origins: ${CORS_ALLOWED_ORIGINS}
            frontend-url: ${FRONTEND_URL}
          
          token:
            access-expiration-time: 3600000
            refresh-expiration-time: 86400000
            secret: ${JWT_SECRET}
          
          github:
            app:
              id: ${APP_ID}
              private-key: ${APP_PRIVATE_KEY}
            webhook:
              secret: ${WEBHOOK_SECRET}
            oauth2:
              client-id: ${OAUTH_CLIENT_ID}
              client-secret: ${OAUTH_CLIENT_SECRET}
            api:
              rate-limit:
                requests-per-hour: 5000
                core-pool-size: 5
                max-pool-size: 10
          EOL
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << 'EOF'
          version: '3.8'
          services:
            app:
              build: .
              ports:
                - "5000:5000"
              environment:
                - SPRING_PROFILES_ACTIVE=prod
                - SPRING_DATASOURCE_URL=jdbc:mariadb://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
                - SPRING_DATASOURCE_USERNAME=${RDS_USERNAME}
                - SPRING_DATASOURCE_PASSWORD=${RDS_PASSWORD}
                - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/chatdb
                - SPRING_DATA_REDIS_HOST=redis
                - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
                - APP_CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
                - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
                - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
                - APP_FRONTEND_URL=${FRONTEND_URL}
                - TOKEN_SECRET=${JWT_SECRET}
                - GITHUB_APP_ID=${APP_ID}
                - GITHUB_APP_PRIVATE_KEY=${APP_PRIVATE_KEY}
                - GITHUB_WEBHOOK_SECRET=${WEBHOOK_SECRET}
                - GITHUB_OAUTH2_CLIENT_ID=${OAUTH_CLIENT_ID}
                - GITHUB_OAUTH2_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
              volumes:
                - /var/app/current:/app
              depends_on:
                - mongodb
                - redis
                - elasticsearch

            mongodb:
              image: mongo:latest
              volumes:
                - /var/app/current/mongodb_data:/data/db
              ports:
                - "27017:27017"

            redis:
              image: redis:latest
              command: redis-server --notify-keyspace-events Ex
              volumes:
                - /var/app/current/redis_data:/data
              ports:
                - "6379:6379"

            elasticsearch:
              image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
              environment:
                - discovery.type=single-node
                - ES_JAVA_OPTS=-Xms512m -Xmx512m
                - xpack.security.enabled=false
              volumes:
                - /var/app/current/es_data:/usr/share/elasticsearch/data
                - /var/app/current/config/elasticsearch/indices:/usr/share/elasticsearch/config/indices
              ports:
                - "9200:9200"
          EOF
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Validate docker-compose.yml
        run: docker compose config

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: Generate deployment package
        run: |
          ./gradlew clean build
          mkdir -p deploy
          cp build/libs/*.jar deploy/app.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cp docker-compose.yml deploy/
          cp Dockerfile deploy/
          cd deploy && zip -r deploy.zip .

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: Syncday
          environment_name: Syncday-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
